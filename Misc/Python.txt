Pandas 
Using the AWS SDK for Python (Boto)   https://boto3.amazonaws.com/v1/documentation/api/latest/index.html
NumPy
MathPlotLib




https://stackify.com/learn-python-tutorials/
https://www.reddit.com/r/Python/comments/49j7rs/what_python_book_for_experienced_programmers/
https://www.w3resource.com/python-exercises/
https://www.quora.com/Can-you-give-me-links-to-advanced-Python-programming-problems-exercises

https://www.cs.put.poznan.pl/csobaniec/software/python/py-qrc.html
https://devdocs.io/python~3.7/library/turtle#turtle.xcor


To read json from a file and read directly as nested List -use json.loads()
=========================================================
data_file=open('sample.json')
data = json.load(data_file)
print(data["Student"][0]["id"])

-------------------------------------------------------------------

Dictionary Mutable

File handling 
-----------
 flight_file=open("flight.txt","r")     # comment- operations possible r,w,a
          
functions:-
1> input 
	name=input("What is your name")  # string input
	print(name)
	
	age=input("your age")		#integer input
	print(age)

single line comment python - sue #
Multi line comment use """ to start and """ to end. or use #


======================================================================================


sample code 1
1>odd and even number
------------------

a=[1,2,3,4,5,6,7,8]
for i in a:
  if (i%2==0):
      print("even number")
  else:
      print("odd number")
	  
--------------------------------------------
2> Leap Year program
def fnLeapYear(  yr):
    output="Not a Laep year"
    if (int(yr)%4==0 and int(yr)%1000==0):    # function return of input was not an int.??
        output="Leap year"
    elif (int(yr)%200==0):
        output="LeapYear"
    return output
    
print(fnLeapYear(input("year ?")))


-----------------------------------------

3>generating fibonacii using recursive functions

def fnGenerateFibonacii(x,y,c,count):
    if c==count:
        print(x+y)
        return  x+y
    else :
        c+=1										# use +=1 instead of ++
        print(x+y)
        return(fnGenerateFibonacii(y,x+y,c,count))
        
count=int(input("enter number of fibonacii numbers"))
#for i in 1 to count : # (1,5,1)
fnGenerateFibonacii(1,1,1,count)

------------------------------------

4>    compare_file_line_by_line.py
Instead this compares character by character... see next exercise.


infile1=open("123.txt","r")
infile2=open("abc.txt","r")
outFile=open("out.txt","a")
text_infile1=infile1.read()
text_infile2=infile2.read()
for i in text_infile1:
        print("checking",i)
        if i in text_infile2:							# to search an element within a list
                print(i," found in file abc.txt")
                outFile.write(i)
infile1.close()
infile2.close()
outFile.close()

123.txt
1
2
3
4

abc.txt
0
2
4
------------------------------------------------


5> TO SPLIT a read line into words

f = open(filename,"r");
lines = f.readlines();
for i in lines:
thisline = i.split(" ");

---------------------------------------------------------

word count using dictionaries

text=input("Enter the text").replace("\"","").replace("'","").replace(".","").split(" ")
word_freq={}
for string in text:
    if string in word_freq:
        word_freq[string]=(word_freq[string]+1)				# inserting and updating dictionaries use the same format
    else:
        word_freq[string]=1 
for string in text:
    print (string, word_freq[string])
	
	
------------------------------------------------------------
oracle connection and fetching data using Python.
single recrd fetching - returned as tuples which are sometimes also referred as tuples.
multiple recrd fetching - as list of tuples.
fetchall
https://www.oracle.com/technetwork/articles/dsl/python-091105.html
